(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{342:function(t,n,o){var content=o(482);"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,o(26).default)("094cb41a",content,!0,{sourceMap:!1})},481:function(t,n,o){"use strict";var e=o(342);o.n(e).a},482:function(t,n,o){(t.exports=o(25)(!1)).push([t.i,".movable[data-v-cda37778]{cursor:move}p[data-v-cda37778]{transition:width 2s}p[data-v-cda37778],pre[data-v-cda37778]{font-size:1.5em}",""])},504:function(t,n,o){"use strict";o.r(n);var e={data:function(){return{template:'\n<template>\n  <div class="section">\n    <div class="container">\n      <h1 class="title">vue-chart.js demo</h1>\n      <div class="columns">\n        <div class="column is-three-quarters">\n          <HorizontalBar :chart-data="chartData" :options="options" style="height: 300px;" />\n        </div>\n        <div class="column">\n          <Doughnut v-if="doughnutChartData" :chart-data="doughnutChartData" :options="{animation: {duration: 300}}" style="width: 300px; height: 300px;" />\n        </div>\n      </div>\n      <div>tooltipModel: {{ tooltipModel }}</div>\n    </div>\n  </div>\n</template>\n'}}},l=(o(481),o(18)),component=Object(l.a)(e,function(){var t=this,n=t.$createElement,o=t._self._c||n;return o("div",{staticClass:"section"},[o("div",{staticClass:"container"},[o("h2",{staticClass:"title"},[t._v("template")]),t._v(" "),o("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[o("code",{staticClass:"html"},[t._v(t._s(t.template))])]),t._v(" "),o("br"),t._v(" "),o("h2",{staticClass:"title"},[t._v("script")]),t._v(" "),o("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[o("code",{staticClass:"javascript"},[t._v("\nimport HorizontalBar from '~/components/horizontal-bar'\nimport Doughnut from '~/components/doughnut'\n\nconst pal = ['002b36', '073642', '586e75', '658b83', '839496', '93a1a1', 'eee8d5', 'fdf6e3'];\n\nexport default {\n  components: {\n    HorizontalBar,\n    Doughnut\n  },\n  data(ctx) {\n    return {\n      tooltipModel: null,\n      chartData: {\n        labels: [\"A組\", \"B組\", \"C組\", \"D組\", \"E組\"],\n        datasets: [\n            {\n                label: \"英語\",\n                data: [ 80, 70, 50, 50, 50],\n                borderColor:     '#' + pal[3],\n                backgroundColor: '#' + pal[3],\n            },\n            {\n                label: \"数学\",\n                data: [ 90, 70, 60, 90, 80],\n                borderColor:     '#' + pal[4],\n                backgroundColor: '#' + pal[4],\n            },\n            {\n                label: \"国語\",\n                data: [ 50, 70, 80, 80, 70],\n                borderColor:     '#' + pal[5],\n                backgroundColor: '#' + pal[5],\n            },\n            {\n                label: \"理科\",\n                data: [ 90, 80, 70, 30, 40],\n                borderColor:     '#' + pal[0],\n                backgroundColor: '#' + pal[0],\n            },\n            {\n                label: \"社会\",\n                data: [ 80, 70, 90, 90, 90],\n                borderColor:     '#' + pal[2],\n                backgroundColor: '#' + pal[2],\n            },\n        ]\n      },\n\t\t\toptions: {\n\t\t\t\ttitle: {\n\t\t\t\t\tdisplay: true,\n\t\t\t\t\ttext: 'Chart.js Bar Chart - Stacked'\n\t\t\t\t},\n\t\t\t\ttooltips: {\n          // enabled: false,\n          custom: ctx && ctx.setTooltipModel,\n\t\t\t\t},\n        responsive: true,\n        maintainAspectRatio: false,\n\t\t\t\tscales: {\n\t\t\t\t\txAxes: [{\n\t\t\t\t\t\tstacked: true,\n\t\t\t\t\t}],\n\t\t\t\t\tyAxes: [{\n\t\t\t\t\t\tstacked: true\n\t\t\t\t\t}]\n\t\t\t\t}\n\t\t\t}\n    }\n  },\n  computed: {\n    doughnutChartData() {\n      if (!this.tooltipModel || !this.tooltipModel.dataPoints) {\n        return\n      }\n      const data = this.tooltipModel.dataPoints.map(x => x.value)\n      const chartData = {\n        labels: [\"英語\", \"数学\", \"国語\", \"理科\", \"社会\"],\n        datasets: [\n          {\n            backgroundColor: [\n              '#' + pal[3],\n              '#' + pal[4],\n              '#' + pal[5],\n              '#' + pal[0],\n              '#' + pal[2],\n            ],\n            data,\n          }\n        ]\n      }\n      return chartData\n    }\n  },\n  methods: {\n    setTooltipModel(tooltipModel) {\n      if (!tooltipModel.dataPoints) {\n        return\n      }\n      this.tooltipModel = tooltipModel\n    }\n  }\n}\n      ")])])])])},[],!1,null,"cda37778",null);n.default=component.exports}}]);